package com.encryption;

public class PasswordEncryption {
    
    public static String encrypt(String a){
//    char[] A=a.toCharArray();
//    int m=A.length ;
//    long hA=0 , M=(long)1e9+7 , p=8191 , p1=p;
//    
//    for(int i=0;i<m;i++){
//        hA=(hA+A[i]*p1)%M;
//        p1=(p1*p)%M;
//    }
//    
//    long val = hA, val2 = 0;
//    String str = "";
//    int carry = 32;
//    while(val > 0){
//        int digit =(int) val % 100;
//        val2 = val2 + digit;
//        if(digit > 32)str = str + (char) digit;
//        else carry += digit;
//        val = val / 100;
//        val2 = val2 * 100;
//    }
//    if(carry > 32 && carry != 100)str += (char)(carry);
//    
//    while(hA > 0){
//    	int digit =(int) hA % 10;
//
//    	if(digit == 0)str += ')';
//    	else if(digit == 1)str += '!';
//    	else if(digit == 2)str += '@';
//    	else if(digit == 3)str += '#';
//    	else if(digit == 4)str += '$';
//    	else if(digit == 5)str += '%';
//    	else if(digit == 6)str += '^';
//    	else if(digit == 7)str += '&';
//    	else if(digit == 8)str += '*';
//    	else str += '9';
//    	
//    	hA = hA / 10;
//    }
//    
//    int c1 = 32;
//    while(val2 > 0){
//    	int digit = (int) val2 % 100;
//    	if(digit > 32)str = str + (char) digit;
//    	c1 += digit;
//    	val2 = val2 / 10;
//    }
//    if(c1 > 32 && c1 != 100)str += (char)c1;
//    
//    return "$2a$"+a.substring(2,5)+"10$"+a.substring(5,7)+str;
    	
    	
      char[] A=a.toCharArray();
      int m=A.length ;
      long hA=0 , M=(long)1e9+7 , p=8191 , p1=p;
      
      for(int i=0;i<m;i++){
          hA=(hA+A[i]*p1)%M;
          p1=(p1*p)%M;
      }
      
      String str = "";
      str = str + hA;
      
      return str;
    	
}


}
